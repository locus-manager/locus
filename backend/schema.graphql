### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar Date

type Mutation {
  createPlace(code: String!, name: String!): User!
  createUser(email: String!, name: String!, phone: String!): User!
  createUserOnPlace(code: String!, email: String!, name: String!, phone: String!, type: String!): User!
}

type Place {
  code: String!
  id: Int!
  name: String!
}

input PlaceWhereUniqueInput {
  code: String
  id: Int
}

type Query {
  activeCheckin(email: String!): [UsersOnPlaces!]!
  places(after: PlaceWhereUniqueInput, before: PlaceWhereUniqueInput, first: Int, last: Int): [Place!]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  usersOnPlaces(after: UsersOnPlacesWhereUniqueInput, before: UsersOnPlacesWhereUniqueInput, first: Int, last: Int): [UsersOnPlaces!]!
}

type User {
  email: String!
  id: Int!
  name: String!
  phone: String!
}

type UsersOnPlaces {
  checkInDate: Date
  checkoutDate: Date
  id: Int!
  place: Place!
  placeId: Int!
  user: User!
  userId: Int!
}

input UsersOnPlacesWhereUniqueInput {
  id: Int
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
